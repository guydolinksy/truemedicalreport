{{ if and (eq .Values.digest.type "sheba") (eq .Values.digest.sheba.input.type "internal") }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: '{{ .Release.Name }}-sheba-arc'
  labels:
    project: tmr
    component: sheba-arc
    release: '{{ .Release.Name }}'
spec:
  replicas: 1
  selector:
    matchLabels:
      project: tmr
      component: sheba-arc
      release: '{{ .Release.Name }}'
  template:
    metadata:
      labels:
        project: tmr
        component: sheba-arc
        release: '{{ .Release.Name }}'
    spec:
      initContainers:
        - name: check-sheba-chameleon
          image: {{ .Values.global.helpers.busybox.image }}
          command:
            - sh
            - -c
            - |-
              OK=0
              echo "Checking sheba-chameleon port"
              while [ $OK != 1 ]; do
                  echo -n "."
                  nc -z sbwnd81c 1433 2>&1 >/dev/null && OK=1 || sleep 1
              done
              echo
              echo "Done"
      containers:
        - name: sheba-arc
          image: '{{ .Values.digest.sheba.input.internal.arc.repository.image }}{{ if ne .Values.digest.sheba.input.internal.arc.repository.tag "" }}:{{ .Values.digest.sheba.input.internal.arc.repository.tag }}{{ end }}'
          ports:
            - name: sheba-arc
              containerPort: 1433
          env:
            - name: SA_PASSWORD
              value: 'Password123'
          readinessProbe:
            tcpSocket:
              port: 1433
            initialDelaySeconds: 60
            failureThreshold: 10
          volumeMounts: {{ if not (len .Values.digest.sheba.input.internal.arc.volumeMappings) }}[]{{ end }}
            {{- range $index, $value := .Values.digest.sheba.input.internal.arc.volumeMappings }}
            - name: 'volume-{{ $index }}'
              mountPath: {{ $value.containerPath }}
            {{end}}
      volumes: {{ if not (len .Values.digest.sheba.input.internal.arc.volumeMappings) }}[]{{ end }}
        {{- range $index, $value := .Values.digest.sheba.input.internal.arc.volumeMappings }}
        - name: 'volume-{{ $index }}'
          hostPath:
            path:  {{ $.Values.global.baseDir }}/{{ $value.relativePath }}
            type: DirectoryOrCreate
        {{end}}
{{ end }}