apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "frontend.fullname" . }}
  labels:
    {{- include "frontend.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "frontend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "frontend.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "frontend.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: 'check-backend'
          image: {{ $.Values.global.helpers.busybox.image }}
          command: ["sh", "-c", "until nc -z {{ .Values.global.fullname.backend }} {{ .Values.global.servicePort.backend }}; do sleep 1; done"]
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ if .Values.global.devMode.enabled }}{{ .Values.image.tag | default "dev" }}{{ else }}{{ .Values.image.tag | default .Chart.AppVersion }}{{ end }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.global.devMode.enabled }}
          volumeMounts: {{ if not (len .Values.devMappings) }}[]{{ end }}
            {{- range $index, $value := .Values.devMappings }}
            - name: 'volume-{{ $index }}'
              mountPath: {{ $value.containerPath }}
            {{end}}
          {{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
            failureThreshold: 10
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
            failureThreshold: 10
            periodSeconds: 60
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.global.devMode.enabled }}
      volumes: {{ if not (len .Values.devMappings) }}[]{{ end }}
        {{- range $index, $value := .Values.devMappings }}
        - name: 'volume-{{ $index }}'
          hostPath:
            path:  {{ $.Values.global.devMode.baseDir }}/{{ $value.relativePath }}
            type: DirectoryOrCreate
        {{end}}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
